/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mhf.script.generator.screen;

import java.awt.Component;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.List;

import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

import com.google.gson.Gson;
import com.mhf.script.generator.util.Executor;
import com.mhf.script.generator.util.SaveProjectHelper;
import com.mhf.script.generator.util.ScriptGeneratorModel;

/**
 *
 * @author Matheus
 */
public class ScriptGeneratorMain extends javax.swing.JFrame {

    /**
     * Creates new form ScriptGeneratorMain
     */
    public ScriptGeneratorMain() {
        initComponents();
        final Component component = this;

        txtPath.addMouseListener(new MouseAdapter() {

            public void mouseClicked(MouseEvent e) {
                JFileChooser chooser = new JFileChooser();
                chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
                int option = chooser.showOpenDialog(component);
                if (option == JFileChooser.APPROVE_OPTION) {
                    txtPath.setText(chooser.getSelectedFile().getPath());
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblPath = new javax.swing.JLabel();
        txtPath = new javax.swing.JTextField();
        lblScriptName = new javax.swing.JLabel();
        lblUEName = new javax.swing.JLabel();
        lblFunc = new javax.swing.JLabel();
        lblOrder = new javax.swing.JLabel();
        txtScriptName = new javax.swing.JTextField();
        txtUEName = new javax.swing.JTextField();
        txtFunc = new javax.swing.JTextField();
        txtOrder = new javax.swing.JTextField();
        lblOpFunc = new javax.swing.JLabel();
        jComboOpFunc = new javax.swing.JComboBox<>();
        lblEventName = new javax.swing.JLabel();
        txtEventName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        listEvent = new javax.swing.JList<>(listEventModel);
        lblScripts = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaScript = new javax.swing.JTextArea();
        btnGeraScript = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnClearAll = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        btnLoadProjects = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ScriptGenerator");

        lblPath.setText("Path");

        txtPath.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPathActionPerformed(evt);
            }
        });

        lblScriptName.setText("Script Name");

        lblUEName.setText("User Exit Name");

        lblFunc.setText("Functionality");

        lblOrder.setText("Order");

        txtScriptName.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtScriptNameActionPerformed(evt);
            }
        });

        lblOpFunc.setText("Operation Functionality");

        jComboOpFunc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Search", "Edit", "Insert", "Delete" }));
        jComboOpFunc.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboOpFuncActionPerformed(evt);
            }
        });

        lblEventName.setText("Event Name");

        txtEventName.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEventNameActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(listEvent);

        lblScripts.setText("Script");

        txtAreaScript.setColumns(20);
        txtAreaScript.setRows(5);
        jScrollPane2.setViewportView(txtAreaScript);

        btnGeraScript.setText("Generate");
        btnGeraScript.setPreferredSize(new java.awt.Dimension(85, 23));
        btnGeraScript.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGeraScriptActionPerformed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.setPreferredSize(new java.awt.Dimension(85, 23));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnRemove.setText("Remove");
        btnRemove.setPreferredSize(new java.awt.Dimension(85, 23));
        btnRemove.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnClearAll.setText("Clear");
        btnClearAll.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearAllActionPerformed(evt);
            }
        });

        jCheckBox1.setSelected(true);
        jCheckBox1.setText("Remove Older Events");
        jCheckBox1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        btnLoadProjects.setText("Load Projects");
        btnLoadProjects.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadProjectsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout
            .setHorizontalGroup(
                layout
                    .createParallelGroup(
                        javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(
                        layout.createSequentialGroup().addContainerGap()
                            .addGroup(
                                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(
                                        jScrollPane2)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
                                        layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(btnLoadProjects)
                                            .addPreferredGap(
                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(btnGeraScript, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(
                                        layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(lblPath).addComponent(lblScriptName).addComponent(lblUEName)
                                                .addComponent(lblFunc).addComponent(lblOrder).addComponent(lblScripts))
                                            .addGap(26, 26,
                                                26)
                                            .addGroup(
                                                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(txtFunc, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
                                                    .addComponent(txtUEName,
                                                        javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtScriptName, javax.swing.GroupLayout.Alignment.LEADING).addComponent(txtPath, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtOrder).addComponent(jCheckBox1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup().addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(btnClearAll, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup().addComponent(lblOpFunc).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jComboOpFunc, 0,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup().addComponent(lblEventName).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(txtEventName))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))).addContainerGap()));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup().addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(lblPath)
                    .addComponent(txtPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(lblOpFunc)
                    .addComponent(jComboOpFunc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(lblScriptName)
                .addComponent(txtScriptName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(lblEventName)
                .addComponent(txtEventName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(lblUEName).addComponent(txtUEName, javax.swing.GroupLayout.PREFERRED_SIZE,
                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(lblFunc).addComponent(txtFunc, javax.swing.GroupLayout.PREFERRED_SIZE,
                    javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(lblOrder).addComponent(txtOrder, javax.swing.GroupLayout.PREFERRED_SIZE,
                    javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(lblScripts)
                .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(btnClearAll)
                .addComponent(jCheckBox1)).addGap(4, 4, 4).addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnGeraScript, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(btnLoadProjects))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

        lblPath.getAccessibleContext().setAccessibleName("lblPath");
        txtPath.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoadProjectsActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnLoadProjectsActionPerformed
        final Component component = this;
        JFileChooser chooser = new JFileChooser();
        int option = chooser.showOpenDialog(component);
        if (option == JFileChooser.APPROVE_OPTION) {
            try {
                BufferedReader bufferedReader = new BufferedReader(new FileReader(chooser.getSelectedFile()));
                Gson gson = new Gson();
                ScriptGeneratorModel scriptGeneratorModel = gson.fromJson(bufferedReader, ScriptGeneratorModel.class);
                setFields(scriptGeneratorModel);
            } catch (FileNotFoundException e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }// GEN-LAST:event_btnLoadProjectsActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jCheckBox1ActionPerformed

    private void txtPathActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtPathActionPerformed

    }// GEN-LAST:event_txtPathActionPerformed

    private void txtScriptNameActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtScriptNameActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txtScriptNameActionPerformed

    private void jComboOpFuncActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jComboOpFuncActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jComboOpFuncActionPerformed

    private void txtEventNameActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtEventNameActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txtEventNameActionPerformed

    private void btnGeraScriptActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnGeraScriptActionPerformed

        List<String> listEventCollection = new ArrayList<>();

        for (int i = 0; i < listEventModel.size(); i++) {
            listEventCollection.add(listEventModel.getElementAt(i));
        }

        ScriptGeneratorModel sgm =
            new ScriptGeneratorModel(txtPath.getText(), txtScriptName.getText(), txtUEName.getText(), txtFunc.getText(), txtOrder.getText(), listEventCollection, txtAreaScript.getText());
        try {
            Executor exec = new Executor();
            exec.execute(sgm);
            int selected = JOptionPane.showConfirmDialog(this, "Script gerado com sucesso. Deseja Salvar o layout?", "Salva Script?", JOptionPane.YES_NO_OPTION);
            if (selected == JOptionPane.YES_OPTION) {
                SaveProjectHelper saveProjectHelper = new SaveProjectHelper();
                saveProjectHelper.generateProject(sgm);
            }
        } catch (Throwable e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            e.printStackTrace();
        }
    }// GEN-LAST:event_btnGeraScriptActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnAddActionPerformed

        listEventModel.addElement(jComboOpFunc.getSelectedItem().toString() + "-" + txtEventName.getText());
    }// GEN-LAST:event_btnAddActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnRemoveActionPerformed

        listEventModel.removeElement(listEvent.getSelectedValue());
    }// GEN-LAST:event_btnRemoveActionPerformed

    private void btnClearAllActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnClearAllActionPerformed
        listEventModel.removeAllElements();
    }// GEN-LAST:event_btnClearAllActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ScriptGeneratorMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ScriptGeneratorMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ScriptGeneratorMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ScriptGeneratorMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ScriptGeneratorMain().setVisible(true);
            }
        });
    }

    private void setFields(ScriptGeneratorModel model) {
        txtPath.setText(model.getFilePath());
        txtScriptName.setText(model.getScriptName());
        txtFunc.setText(model.getFunctionality());
        txtUEName.setText(model.getUserExitName());
        txtOrder.setText(model.getOrder());
        for (String event : model.getEvent()) {
            listEventModel.addElement(event);
        }
        txtAreaScript.setText(model.getScript());
    }

    DefaultListModel<String> listEventModel = new DefaultListModel<>();

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;

    private javax.swing.JButton btnClearAll;

    private javax.swing.JButton btnGeraScript;

    private javax.swing.JButton btnLoadProjects;

    private javax.swing.JButton btnRemove;

    private javax.swing.JCheckBox jCheckBox1;

    private javax.swing.JComboBox<String> jComboOpFunc;

    private javax.swing.JScrollPane jScrollPane1;

    private javax.swing.JScrollPane jScrollPane2;

    private javax.swing.JLabel lblEventName;

    private javax.swing.JLabel lblFunc;

    private javax.swing.JLabel lblOpFunc;

    private javax.swing.JLabel lblOrder;

    private javax.swing.JLabel lblPath;

    private javax.swing.JLabel lblScriptName;

    private javax.swing.JLabel lblScripts;

    private javax.swing.JLabel lblUEName;

    private javax.swing.JList<String> listEvent;

    private javax.swing.JTextArea txtAreaScript;

    private javax.swing.JTextField txtEventName;

    private javax.swing.JTextField txtFunc;

    private javax.swing.JTextField txtOrder;

    private javax.swing.JTextField txtPath;

    private javax.swing.JTextField txtScriptName;

    private javax.swing.JTextField txtUEName;
    // End of variables declaration//GEN-END:variables
}
